/*
 * Generated by Bluespec Compiler, version 2024.01-9-gc481d7f5 (build c481d7f5)
 * 
 * On Thu Oct 24 00:16:54 IST 2024
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkTb_h__
#define __mkTb_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTb module */
class MOD_mkTb : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_a;
  MOD_Reg<tUInt8> INST_b;
  MOD_Reg<tUInt32> INST_i;
  MOD_Reg<tUInt8> INST_obj_mul_rg_a;
  MOD_Reg<tUInt8> INST_obj_mul_rg_b;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage1_op_0;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage1_op_1;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage1_op_2;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage1_op_3;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage1_op_4;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage2_op_0;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage2_op_1;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage2_op_2;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage3_op_0;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage3_op_1;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage4_op;
  MOD_Reg<tUInt32> INST_obj_mul_rg_stage5_op;
  MOD_Reg<tUInt8> INST_obj_mul_s1_a;
  MOD_Reg<tUInt8> INST_obj_mul_s1_b;
  MOD_Reg<tUInt32> INST_obj_mul_s1_c;
  MOD_Reg<tUInt8> INST_obj_mul_s2_a;
  MOD_Reg<tUInt8> INST_obj_mul_s2_b;
  MOD_Reg<tUInt32> INST_obj_mul_s2_c;
  MOD_Reg<tUInt8> INST_obj_mul_s3_a;
  MOD_Reg<tUInt8> INST_obj_mul_s3_b;
  MOD_Reg<tUInt32> INST_obj_mul_s3_c;
  MOD_Reg<tUInt8> INST_obj_mul_s4_a;
  MOD_Reg<tUInt8> INST_obj_mul_s4_b;
  MOD_Reg<tUInt32> INST_obj_mul_s4_c;
  MOD_Reg<tUInt8> INST_obj_mul_s5_a;
  MOD_Reg<tUInt8> INST_obj_mul_s5_b;
  MOD_Reg<tUInt32> INST_obj_mul_s5_c;
 
 /* Constructor */
 public:
  MOD_mkTb(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_fin;
  tUInt8 DEF_CAN_FIRE_RL_fin;
  tUInt8 DEF_WILL_FIRE_RL_start;
  tUInt8 DEF_CAN_FIRE_RL_start;
  tUInt8 DEF_WILL_FIRE_RL_obj_mul_s5;
  tUInt8 DEF_CAN_FIRE_RL_obj_mul_s5;
  tUInt8 DEF_WILL_FIRE_RL_obj_mul_s4;
  tUInt8 DEF_CAN_FIRE_RL_obj_mul_s4;
  tUInt8 DEF_WILL_FIRE_RL_obj_mul_s3;
  tUInt8 DEF_CAN_FIRE_RL_obj_mul_s3;
  tUInt8 DEF_WILL_FIRE_RL_obj_mul_s2;
  tUInt8 DEF_CAN_FIRE_RL_obj_mul_s2;
  tUInt8 DEF_WILL_FIRE_RL_obj_mul_s1;
  tUInt8 DEF_CAN_FIRE_RL_obj_mul_s1;
  tUInt32 DEF_b__h47003;
 
 /* Local definitions */
 private:
 
 /* Rules */
 public:
  void RL_obj_mul_s1();
  void RL_obj_mul_s2();
  void RL_obj_mul_s3();
  void RL_obj_mul_s4();
  void RL_obj_mul_s5();
  void RL_start();
  void RL_fin();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTb &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTb &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTb &backing);
};

#endif /* ifndef __mkTb_h__ */
